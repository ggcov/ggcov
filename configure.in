dnl Process this file with autoconf to produce a configure script.
dnl You may need the --localdir option to get the included .m4's
dnl
dnl ggcov - A GTK frontend for exploring gcov coverage data
dnl Copyright (c) 2001-2003 Greg Banks
dnl 
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl 
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl 
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
dnl 
dnl $Id: configure.in,v 1.36.2.4 2003-11-04 12:55:52 gnb Exp $
dnl

AC_INIT(src/ggcov.c)
AM_INIT_AUTOMAKE(ggcov, 0.2.2)
AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

dnl Enabling debugging code
dnl This is mostly straight out of the automake manual.
AC_MSG_CHECKING(whether to enable debugging code)
AC_ARG_ENABLE(debug,
[  --enable-debug          Turn on debugging code],[
case "${enableval}" in
yes|no)
    debug=${enableval}
    ;;
*)
    AC_MSG_ERROR(bad value ${enableval} for --enable-debug)
    ;;
esac
],[debug=no])
AC_MSG_RESULT($debug)
AM_CONDITIONAL(DEBUG, test x$debug = xyes)

dnl Checks for programs.
AC_ARG_PROGRAM
AC_PROG_INSTALL
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB

if test x$debug = xyes ; then
##   CFLAGS="$CFLAGS -DGTK_DISABLE_DEPRECATED=1 -DGLIB_DISABLE_DEPRECATED=1"
    echo "debug mode on"
fi

dnl Stuff for gettext
dnl ALL_LINGUAS="la"
dnl AM_GNU_GETTEXT

dnl Checks for libraries.
AC_CHECK_LIB(iberty, obstack_free)
AC_CHECK_LIB(bfd, bfd_init)

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(malloc.h sys/ioctl.h sys/time.h unistd.h memory.h)
AC_CHECK_HEADERS(signal.h sys/filio.h stdint.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_PID_T


dnl A bunch of warning options for gcc
dnl -Wshadow
AC_GCC_ADD_CFLAGS([-Wall -Wchar-subscripts -Wmissing-prototypes 
    	    	   -Wpointer-arithmetic -Wcast-align -Wsign-compare
		   -pedantic -Wno-long-long])


dnl Use the latest version of gtk which actually is complete and works.
dnl Should result in: gtk 1.2 on RedHat 7.3, gtk 2 on RedHat 8 & greater.

# try gtk 2.0
libpopt=no
PKG_CHECK_MODULES(GGCOV_GUI, libglade-2.0 >= 2.0.0 libgnomeui-2.0 >= 2.0.0,
    	    	  [gtk2=yes],[gtk2=no])
if test $gtk2 = yes ; then
    PKG_CHECK_MODULES(GGCOV_CLI, glib-2.0 >= 2.0.0)
dnl    if test "x$GCC" = "xyes"; then
dnl    	# The gtk2 build on RH7.3 seems to be missing an -rdynamic
dnl	# option, which causes global symbols to be exported by
dnl	# default, which is needed by libglade.
dnl    	GGCOV_GUI_LIBS="$GGCOV_GUI_LIBS -rdynamic"
dnl    fi
    AC_CHECK_LIB(gtk-x11-2.0, gtk_text_buffer_select_range,
	      AC_DEFINE(HAVE_GTK_TEXT_BUFFER_SELECT_RANGE,,[
 * The function gtk_text_buffer_select_range may or may
 * not be present in the gtk2 libraries...we have to work
 * around it if not.
]),,
	      [$GGCOV_GUI_LIBS])
    GGCOV_GLADE_FILE=ggcov-glade2.glade
    # gnome2 doesn't need popt, so it may or may not be present
    AC_CHECK_LIB(popt,poptGetContext,
    	    	 [ libpopt=yes ;  LIBS="$LIBS -lpopt" ],,
		 $GGCOV_GUI_CFLAGS $GGCOV_GUI_LIBS)
else
    # fall back to gtk 1.2
    AC_MSG_WARN([GNOME version 2 libraries not found, falling back to 1.2])
    AM_PATH_LIBGLADE(,AC_MSG_ERROR(ggcov requires the libglade library),gnome)
    AM_PATH_IMLIB(,,AC_MSG_ERROR(ggcov requires the libgdk_imlib library))
    AM_PATH_GLIB(,,AC_MSG_ERROR(ggcov requires the glib library))
    GGCOV_GUI_CFLAGS="$LIBGLADE_CFLAGS $IMLIB_CFLAGS"
    GGCOV_GUI_LIBS="$LIBGLADE_LIBS $IMLIB_LIBS"
    GGCOV_CLI_CFLAGS="$GLIB_CFLAGS"
    GGCOV_CLI_LIBS="$GLIB_LIBS -lpopt"
    GGCOV_GLADE_FILE=ggcov.glade
    # gnome1.2 requires popt so we can assume it's present
    libpopt=yes
fi
if test $libpopt = yes ; then
    AC_DEFINE(HAVE_LIBPOPT,,[Define to 1 if the popt library is present])
fi
AC_SUBST(GGCOV_GUI_CFLAGS)
AC_SUBST(GGCOV_GUI_LIBS)
AC_SUBST(GGCOV_CLI_CFLAGS)
AC_SUBST(GGCOV_CLI_LIBS)
AC_SUBST(GGCOV_GLADE_FILE)

dnl Compile C and C++ with the same (C++) compiler.
CXXFLAGS="$CFLAGS"
CC="$CXX"


dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_TYPE_SIGNAL
AC_FUNC_WAIT3
AC_CHECK_FUNCS(putenv regcomp strchr)

dnl AC_SUBST(ALL_LINGUAS)
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
AC_OUTPUT([
    Makefile
    src/Makefile
    src/libiberty/Makefile
    ui/Makefile
    doc/Makefile
    ggcov.spec
    version.m4
])
dnl intl/Makefile po/Makefile.in
